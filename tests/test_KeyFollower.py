import numpy as npimport h5pyimport pytestimport osfrom iterator_pkg import KeyFollower#Test the functionality of the whole classf = h5py.File("/Users/richardparke/Documents/Diamond/Iterator/tests/hdf5_tests/i18-81742.nxs", "r")def test_iterates_complete_dataset():        #Test for a single key datasets    #Test that this terminates when the key dataset is fully read and that it returns all the keys correctly            filepath = "/Users/richardparke/Documents/Diamond/Iterator/tests/hdf5_tests/i18-81742.nxs"    key_paths = ["entry/solstice_scan/keys/PANDABOX.h5"]    with h5py.File(filepath, "r") as f:        kf = KeyFollower(f, key_paths)        current_key = 0        for i in KeyFollower.iterator():            current_key+=1        assert i == 2814                        def test_iterates_incomplete_dataset():        #test that iterator reads all non-zero keys correctly and times out        passdef test_iterates_multiple_incomplete_dataset():        #Given two key datasets, one further along than the other.    #Test that the iterator iterates upto the smallest key and then times out                                