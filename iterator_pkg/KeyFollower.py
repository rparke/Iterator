import numpy as npimport h5pyimport osimport timefrom multiprocessing import Process    class Follower():    def __init__(self,                 hdf5_file,                 key_datasets,                 timeout = (60*10)):                     self.hdf5_file = hdf5_file,                     self.key_datasets = key_datasets,                     self.current_key = -1                     self.timeout = timeout                                                                   def current_max(self):        current_max = []        for dataset in self.key_datasets:            temp_arr = np.asarray(self.hdf5_file[dataset])            temp_max = np.max(np.nonzero(temp_arr))            current_max += [temp_max]                return(np.asarray(current_max).min())                        def _is_next(self):        if self.current_key <= 2814:            return True                else:            return False                    def iterator(self):        while not(self._is_next()):            time.sleep(10)                    if self.current_key == 2814:            print("Finished")            return                 if self._is_next:            self.current_key+=1            yield (np.asarray(self.hdf5_file[0][self.key_datasets]) [self.current_key])                                                        filepath = "/Users/richardparke/Documents/Diamond/Iterator/tests/hdf5_tests/i18-81742.nxs"key_paths = "entry/solstice_scan/keys/PANDABOX.h5"f = h5py.File(filepath, "r")kf = Follower(f, key_paths)                                                     